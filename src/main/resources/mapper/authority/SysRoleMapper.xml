<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.edu.audit.authority.dao.SysRoleMapper">
    <resultMap id="BaseResultMap" type="com.edu.audit.authority.domain.SysRole">
        <id column="role_id" jdbcType="VARCHAR" property="roleId"/>
        <result column="role_name" jdbcType="VARCHAR" property="roleName"/>
        <result column="remark" jdbcType="VARCHAR" property="remark"/>
        <result column="delete_flag" jdbcType="CHAR" property="deleteFlag"/>
        <result column="create_by" jdbcType="VARCHAR" property="createBy"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_by" jdbcType="VARCHAR" property="updateBy"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
    </resultMap>
    <resultMap id="MenuTreeMap" type="com.edu.audit.authority.dto.MenuTree">
        <id column="menu_id" jdbcType="VARCHAR" property="id"/>
        <result column="menu_name" jdbcType="VARCHAR" property="label"/>
    </resultMap>
    <resultMap id="MenuNodeMap" type="com.edu.audit.authority.dto.MenuNode">
        <id column="menu_id" jdbcType="VARCHAR" property="id"/>
        <result column="menu_name" jdbcType="VARCHAR" property="label"/>
    </resultMap>
    <sql id="Base_Column_List">
    role_id, role_name, remark, delete_flag, create_by, create_time, update_by, update_time
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from sys_role
        where role_id = #{roleId,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from sys_role
    where role_id = #{roleId,jdbcType=VARCHAR}
    </delete>
    <insert id="insert" parameterType="com.edu.audit.authority.domain.SysRole">
    insert into sys_role (role_id, role_name, remark,
      delete_flag, create_by, create_time,
      update_by, update_time)
    values (#{roleId,jdbcType=VARCHAR}, #{roleName,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR},
      #{deleteFlag,jdbcType=CHAR}, #{createBy,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP},
      #{updateBy,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP})
    </insert>
    <insert id="insertSelective" parameterType="com.edu.audit.authority.domain.SysRole">
        insert into sys_role
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="roleId != null">
                role_id,
            </if>
            <if test="roleName != null">
                role_name,
            </if>
            <if test="remark != null">
                remark,
            </if>
            <if test="deleteFlag != null">
                delete_flag,
            </if>
            <if test="createBy != null">
                create_by,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateBy != null">
                update_by,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="roleId != null">
                #{roleId,jdbcType=VARCHAR},
            </if>
            <if test="roleName != null">
                #{roleName,jdbcType=VARCHAR},
            </if>
            <if test="remark != null">
                #{remark,jdbcType=VARCHAR},
            </if>
            <if test="deleteFlag != null">
                #{deleteFlag,jdbcType=CHAR},
            </if>
            <if test="createBy != null">
                #{createBy,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateBy != null">
                #{updateBy,jdbcType=VARCHAR},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.edu.audit.authority.domain.SysRole">
        update sys_role
        <set>
            <if test="roleName != null">
                role_name = #{roleName,jdbcType=VARCHAR},
            </if>
            <if test="remark != null">
                remark = #{remark,jdbcType=VARCHAR},
            </if>
            <if test="deleteFlag != null">
                delete_flag = #{deleteFlag,jdbcType=CHAR},
            </if>
            <if test="createBy != null">
                create_by = #{createBy,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateBy != null">
                update_by = #{updateBy,jdbcType=VARCHAR},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where role_id = #{roleId,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.edu.audit.authority.domain.SysRole">
    update sys_role
    set role_name = #{roleName,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      delete_flag = #{deleteFlag,jdbcType=CHAR},
      create_by = #{createBy,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_by = #{updateBy,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where role_id = #{roleId,jdbcType=VARCHAR}
    </update>
    <insert id="addRole" parameterType="com.edu.audit.authority.domain.SysUserRole">
    insert into sys_user_role(user_id, role_id)
    values(
    #{userId},
    #{roleId}
    )
    </insert>
    <delete id="deleteRole" parameterType="com.edu.audit.authority.domain.SysUserRole">
        delete from sys_user_role
        <where>
            <if test="userId != null and userId != ''">
                user_id = #{userId}
            </if>
            <if test="roleId != null and roleId != ''">
                role_id = #{roleId}
            </if>
        </where>
    </delete>
    <select id="selectAllRole" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from sys_role
    </select>
    <select id="selectRole" resultType="string">
        select remark from sys_role
    </select>
    <select id="queryRoleByUserId" resultType="string">
        select r.remark from sys_role r
        inner join sys_user_role sur on r.role_id = sur.role_id
        where sur.user_id = #{userId}
    </select>
    <select id="queryMenuTree" resultMap="MenuTreeMap">
    select menu_id,menu_name
    from sys_menu
    where menu_type = "M"
    </select>
    <select id="queryMenuNode" resultMap="MenuNodeMap">
    select menu_id,menu_name
    from sys_menu
    where parent_id = #{menuId}
    </select>
    <select id="queryMenuTreeByRoleId" resultMap="MenuTreeMap">
    select m.menu_id,m.menu_name
    from sys_menu m
    inner join sys_role_menu rm on m.menu_id = rm.menu_id
    inner join sys_role r on rm.role_id = r.role_id
    where m.menu_type = "M" and r.role_id = #{roleId}
    </select>
    <select id="queryMenuNodeByRoleId" resultMap="MenuNodeMap">
    select m.menu_id,m.menu_name
    from sys_menu m
    inner join sys_role_menu rm on m.menu_id = rm.menu_id
    inner join sys_role r on rm.role_id = r.role_id
    where m.menu_type = "C" and r.role_id = #{roleId}
    </select>
    <delete id="deleteRoleTreeByRoleId">
        delete from sys_role_menu
        where role_id = #{roleId}
    </delete>
    <delete id="deleteUserRoleByUserId">
        delete from sys_user_role
        where user_id = #{userId}
    </delete>
    <select id="queryRoleIdByRemark" parameterType="string" resultType="string">
        select role_id
        from sys_role
        where remark = #{remark}
    </select>
    <insert id="addRoleTree" parameterType="java.util.List">
        insert into sys_role_menu(role_id, menu_id)
        values
        <foreach collection="list" item="item" index="index" separator=",">
            (#{item.roleId},#{item.menuId})
        </foreach>
    </insert>
    <insert id="addUserRole">
        insert into sys_user_role(user_id, role_id)
        values (#{userId},#{roleId})
    </insert>
</mapper>